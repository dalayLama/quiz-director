plugins {
    id("java")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation('org.springframework.boot:spring-boot-starter-websocket')
    implementation('org.springframework.boot:spring-boot-starter-reactor-netty')
    implementation('org.springframework.security:spring-security-messaging')

    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'
    implementation('org.mapstruct:mapstruct')
    implementation('org.quizstorage:quiz-generator-dto') {
        changing = true
    }
    implementation project(':quiz-director-dto')

    compileOnly('org.projectlombok:lombok')

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation('org.springframework.boot:spring-boot-devtools')
    testImplementation("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation('org.springframework.boot:spring-boot-testcontainers')
    testImplementation('org.testcontainers:junit-jupiter')
    testImplementation('org.testcontainers:mongodb')
    testImplementation('org.testcontainers:rabbitmq')
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation('org.awaitility:awaitility')
    testCompileOnly('org.projectlombok:lombok')

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor('org.projectlombok:lombok')
    annotationProcessor('org.mapstruct:mapstruct-processor')
}

tasks.test {
    useJUnitPlatform()
}